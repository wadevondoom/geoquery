---
- name: Deploy Flask app on Debian-based Droplet
  hosts: droplet
  become: yes
  gather_facts: yes
  vars:
    app_user: appuser

  tasks:
    - name: Create application user
      ansible.builtin.user:
        name: "{{ app_user }}"
        shell: /bin/bash
        state: present

    - name: Set up authorized keys for the application user
      ansible.builtin.authorized_key:
        user: "{{ app_user }}"
        state: present
        key: "{{ lookup('file', '/home/wade/.ssh/id_rsa.pub') }}"

    - name: Update and upgrade packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install necessary packages
      apt:
        pkg:
          - python3-pip
          - python3-dev
          - nginx
        state: present

    - name: Install git
      apt:
        pkg: git
        state: present

    - name: Install Gunicorn and Flask
      pip:
        name:
          - gunicorn
          - Flask
        state: present
        executable: pip3

    - name: Clone Flask app repository
      git:
        repo: https://github.com/wadevondoom/geoquery
        dest: /home/{{ app_user }}/geoquery

    - name: Install Flask app requirements
      pip:
        requirements: /home/{{ app_user }}/geoquery/requirements.txt
        state: present
        executable: pip3

    - name: Create Gunicorn systemd service file
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Gunicorn instance to serve Flask app
          After=network.target

          [Service]
          User={{ app_user }}
          Group=www-data
          WorkingDirectory=/home/appuser/geoquery/
          Environment="PATH=/home/.local/bin"
          ExecStart=/home/appuser/.local/bin/gunicorn --workers 3 --bind unix:/home/appuser/geoquery/gunicorn.sock geoquery:app

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/gunicorn.service

    - name: Start and enable Gunicorn service
      ansible.builtin.systemd:
        name: gunicorn
        state: started
        enabled: yes

    - name: Configure Nginx to proxy requests to Gunicorn
      ansible.builtin.copy:
        content: |
          server {
              listen 80;
              server_name 165.227.206.113;

              location / {
                  include proxy_params;
                  proxy_pass http://unix:/home/appuser/app/geoquery/gunicorn.sock;
              }
          }
        dest: /etc/nginx/sites-available/geoquery

    - name: Create a symbolic link to the Nginx configuration file
      ansible.builtin.file:
        src: /etc/nginx/sites-available/geoquery
        dest: /etc/nginx/sites-enabled/geoquery
        state: link

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test_result
      changed_when: False

    - name: Restart Nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted
      when: nginx_test_result.stdout.find('successful') != -1

    - name: Install ufw
      apt:
        pkg: ufw
        state: present

    - name: Allow HTTP traffic
      ansible.builtin.ufw:
        rule: allow
        name: Nginx Full
